sample.interval=20000
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isTRUE" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ifelse" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"axis" "Axis.default" "Axis" "localAxis" "plot.default" "plot" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".getClassesFromCache" "getClassDef" "is" ".cacheClass" "methods::cacheMetaData" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
".getClassesFromCache" "getClassDef" "is" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
".resetInheritedMethods" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
".getNamespaceInfo" "getNamespaceImports" "addImports" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
".getNamespaceInfo" "getNamespaceImports" "addImports" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
".getNamespaceInfo" "getNamespaceImports" "addImports" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
".getNamespaceInfo" "getNamespaceImports" "addImports" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
".getNamespaceInfo" "getNamespaceImports" "addImports" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
".Call" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "runUserHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"importIntoEnv" "namespaceImportFrom" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"lazyLoadDBfetch" "get" "registerS3methods" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"constantFoldCall" "constantFold" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.pathPackage" "substr" ".rs.createAliasedPath" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "runUserHook" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grepl" "find.package" "index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"unique" "simplify2array" "sapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".deparseOpts" "deparse" "mode" "source" "eval" "eval" "eval" "eval" "eval.parent" "local" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"scan" "read.table" "read.csv" "eval" "eval" "withVisible" "source" "eval" "eval" "eval" "eval" "eval.parent" "local" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
".External2" "type.convert" "read.table" "read.csv" "eval" "eval" "withVisible" "source" "eval" "eval" "eval" "eval" "eval.parent" "local" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"readLines" "paste" "yaml.load" "yaml.load_file" "parse_content.yaml" "parse_content" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"make.names" "data.frame" "FUN" "lapply" "parse_content.yaml" "parse_content" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"as.list" "data.frame" "FUN" "lapply" "parse_content.yaml" "parse_content" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"structure" ".POSIXct" "Sys.time" "srcfilecopy" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"length" "simplify2array" "sapply" "RdTags" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"%in%" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "resume.default" "resume" "<Anonymous>" 
"cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "resume.default" "resume" "<Anonymous>" 
"cmpSym" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallExprFun" "cmpCall" "cmp" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "resume.default" "resume" "<Anonymous>" 
"%in%" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "resume.default" "resume" "<Anonymous>" 
"getInlineInfo" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "resume.default" "resume" "<Anonymous>" 
"cb$commitlocs" "codeBufCode" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpWhileBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "resume.default" "resume" "<Anonymous>" 
"str_c" "structure" "expectation_legacy" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"cb$putcode" "cmpSym" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"any.dots" "checkCall" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpRepeatBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"cb$putconst" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpWhileBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rmatch_calls" "rmatch_calls" "is_robust_match" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "omnitest" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"[.data.frame" "[" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"asNamespace" "get" ":::" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"findCenvVar" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"grep" "is.ddsym" "cmpSym" "cmp" "cmpIs" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "omnitest" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"isTRUE" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"%in%" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"[[.data.frame" "[[" "[.data.frame" "[" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" ".rs.getCompletionsPackages" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"isBaseNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grepl" ".rs.makeCompletions" ".rs.emptyCompletions" ".rs.getCompletionsLibraryContext" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"c" "eval" "eval" "match.arg" "sink" "capture.output" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.getHelpArgument" "<Anonymous>" 
"file.exists" "index.search" "utils::help" ".rs.getHelp" ".rs.getHelpArgument" "<Anonymous>" 
"grepl" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpArgument" "<Anonymous>" 
"lengths" "unique" "simplify2array" "sapply" "RdTags" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpArgument" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "tryAgain" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"stopifnot" "srcfilecopy" "parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"structure" "grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"stopifnot" "srcfilecopy" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"print.default" "print" "print.table" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"getNamespace" ".requirePackage" ".classDefEnv" "getClassDef" "is" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parent.frame" "eval" "FUN" "lapply" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"[[.data.frame" "[[" "[.data.frame" "[" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "readline" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "readline" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "readline" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"%in%" "<Anonymous>" "readline" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsDollar" "<Anonymous>" "readline" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsDollar" "<Anonymous>" "readline" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"dyn.load" "library.dynam" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "handle" "handle_find" "handle_url" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "f" "Reduce" "request_build" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"getInlineInfo" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "curl::handle_setopt" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "loadDependencies" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"%in%" "findCenvVar" "findLocVar" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "loadDependencies" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"match.fun" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "parse_content.yaml" "parse_content" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"as.data.frame" "data.frame" "FUN" "lapply" "parse_content.yaml" "parse_content" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"paste" "force" "as.data.frame.logical" "as.data.frame" "data.frame" "FUN" "lapply" "parse_content.yaml" "parse_content" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"up" "txtProgressBar" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsHelp" "<Anonymous>" 
"make.codeBuf" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsHelp" "<Anonymous>" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsHelp" "<Anonymous>" 
"apply" "find.package" "index.search" "help" "eval" "eval" "?" 
".Call" "browser" "browseURL" "print.help_files_with_topic" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"grepl" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"fsub" "htmlify" "paste0" "writeLines" "writeLinesUTF8" "of0" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"sub" "mysub" "sub" "mysub" "trimws" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"unlist" "simplify2array" "sapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"character" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"gzfile" "readRDS" "FUN" "lapply" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.callsUseMethod" ".rs.isS3Generic" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.resolveFormals" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"strsplit" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.doStripSurrounding" ".rs.stripSurrounding" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"[" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "tryAgain" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"getClassDef" "is" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.scalar" ".rs.makeCompletions" ".rs.emptyCompletions" ".rs.getCompletionsNAMESPACE" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.makeCompletions" ".rs.emptyCompletions" ".rs.getCompletionsLibraryContext" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"grepl" ".rs.findCustomHelpContext" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"grepl" "ifelse" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" ".rs.isCustomCompletionsEnabled" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" ".rs.startsWith" ".rs.fuzzyMatches" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.resolveFormals" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"structure" "makeRestart" "makeRestartList" "withRestarts" "message" "swirl_out" "post_result.default" "post_result" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"structure" ".POSIXct" "Sys.time" "srcfilecopy" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"$" "resume.default" "resume" "<Anonymous>" 
"unlist" ".rs.getCompletionsHelp" "<Anonymous>" 
"file.exists" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"grepl" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"paste0" "FUN" "vapply" "urlify" "paste0" "writeLines" "writeLinesUTF8" "of0" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"close" "readRDS" "FUN" "lapply" "find.package" "index.search" "help" "eval" "eval" "?" 
"readRDS" "FUN" "lapply" "find.package" "index.search" "help" "eval" "eval" "?" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"names" "structure" "grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" "[.data.frame" "[" "resume.default" "resume" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"$" "setTxtProgressBar" "post_progress.default" "post_progress" "resume.default" "resume" "<Anonymous>" 
"stopifnot" "srcfilecopy" "parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".getNamespaceInfo" "getExportedValue" "::" ".rs.isCustomCompletionsEnabled" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"match.fun" "lapply" ".rs.setEncodingUnknownToUTF8" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.appendCompletions" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"existsInFrame" "<Anonymous>" "lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.scalar" ".rs.makeCompletions" ".rs.emptyCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"character" ".rs.makeCompletions" ".rs.emptyCompletions" ".rs.getCompletionsLibraryContext" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"options" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" ".rs.getCompletionsHelp" "<Anonymous>" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"post_result.default" "post_result" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"vhtmlify" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" "strwrap" "swirl_out" "post_exercise.default" "post_exercise" "present.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"class" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"gsub" ".rs.getSignature" "sub" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"gzfile" "read.dcf" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".read_description" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.formCompletionVector" ".rs.makeCompletions" ".rs.emptyCompletions" ".rs.getCompletionsLibraryContext" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"c" "%in%" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"[.data.frame" "[" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"as.vector" "unique" "intersect" "f" "Reduce" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"textConnection" "capture.output" ".rs.getSignature" "<Anonymous>" 
"unlist" ".rs.getCompletionsHelp" "<Anonymous>" 
"gzfile" "readRDS" "FUN" "lapply" "find.package" "index.search" "help" "eval" "eval" "?" 
"[[" "resume.default" "resume" "<Anonymous>" 
"writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"getExportedValue" "::" ".rs.isCustomCompletionsEnabled" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"options" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lapply" "sapply" "RdTags" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.getAnywhere" ".rs.getHelpArgument" "<Anonymous>" 
"c" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"unique" "simplify2array" "sapply" "RdTags" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"as.list.default" "as.list" "lapply" "unlist" "flatten" "%in%" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".External2" "plot.new" "plot.histogram" "plot" "hist.default" "hist" 
".External2" "plot.new" "plot.histogram" "plot" "hist.default" "hist" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
".External2" "plot.new" "plot.histogram" "plot" "hist.default" "hist" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "readline" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"FUN" "lapply" ".rs.setEncodingUnknownToUTF8" "<Anonymous>" "readline" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.getCompletionsDollar" "<Anonymous>" "readline" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"cmpSym" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpIs" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "build_url" "handle_name" "handle_find" "handle_url" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "parse_url" "inherits" "is.url" "stopifnot" "build_url" "handle_name" "handle_find" "handle_url" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"cb$putcode" "cmpTag" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "body_config" "request_build" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"cb$putconst" "cmpCallArgs" "cmpCallExprFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "FUN" "lapply" "parse_headers" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"make.promiseContext" "cmpCallArgs" "cmpCallSymFun" "h" "tryInline" "cmpCall" "cmp" "cmpCallExprFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "FUN" "lapply" "parse_headers" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"exists" "getInlineHandler" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "curl::handle_cookies" "structure" "response" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "courseraCheck" "resume.default" "resume" "<Anonymous>" 
"cb$putconst" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpWhileBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "courseraCheck" "resume.default" "resume" "<Anonymous>" 
"gzfile" "readRDS" "FUN" "lapply" "find.package" "file.path" "swirl_courses_dir" "courseDir.default" "courseDir" "file.path" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"[<-.data.frame" "[<-" "FUN" "lapply" "parse_content.yaml" "parse_content" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"anyDuplicated" "[<-.data.frame" "[<-" "FUN" "lapply" "parse_content.yaml" "parse_content" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"deparse" "paste" "force" "as.data.frame.logical" "as.data.frame" "data.frame" "FUN" "lapply" "parse_content.yaml" "parse_content" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"rbind" "rbind" "parse_content.yaml" "parse_content" "loadLesson.default" "loadLesson" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"match.call" "stopifnot" "srcfilecopy" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"ifelse" "urlify" "paste0" "writeLines" "writeLinesUTF8" "of0" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"body" "grep" "isTRUE" "isS3" "rmatch_calls" "is_robust_match" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "omnitest" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "omnitest" "FUN" "lapply" "sapply" "any_of_exprs" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"[.data.frame" "[" "resume.default" "resume" "<Anonymous>" 
"%in%" "[.data.frame" "[" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".Call" "stri_c" "str_c" "findExpr" "uses_func" "resume.default" "resume" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"axis" "Axis.default" "Axis" "localAxis" "plot.default" "plot" "plot2" "plot.data.frame" "plot" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"unlist" ".rs.getCompletionsHelp" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" "print.help_files_with_topic" "<Anonymous>" 
"parse" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"sapply" "RdTags" "get_link" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ifelse" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "stri_c" "str_c" "swirl_out" "post_exercise.default" "post_exercise" "present.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" 
".External2" "plot.new" "plot.default" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "try" "rmatch_calls" "is_robust_match" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "omnitest" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"unique" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getDollarNamesMethod" ".rs.getCompletionsDollar" "<Anonymous>" 
"make.nonTailCallContext" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getDollarNamesMethod" ".rs.getCompletionsDollar" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" 
".External2" "plot.new" "plot.default" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"length" "length" "[.data.frame" "[" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
".rs.formCompletionVector" ".rs.makeCompletions" ".rs.emptyCompletions" ".rs.getRChainCompletions" ".rs.appendCompletions" "<Anonymous>" 
"index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"%in%" "structure" "grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"grepl" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"tryCatch" ".Rd_get_text" ".Rd_get_title" "gsub" ".Rd_format_title" "strwrap" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"lapply" "sapply" "RdTags" "get_link" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"ifelse" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"unique" "simplify2array" "sapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"<Anonymous>" "lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"FUN" "lapply" "sapply" "RdTags" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"writeLinesUTF8" "of0" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"as.list.default" "as.list" "lapply" "sapply" "RdTags" "get_link" "writeLink" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"vapply" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"readLines" "paste" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" 
".External2" "plot.new" "plot.default" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"sapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" 
".External2" "plot.new" "plot.default" "plot" 
".External2" "plot.new" "plot.default" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"title" "localTitle" "plot.default" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" 
".External2" "plot.new" "plot.default" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"grep" "isTRUE" "isS3" "rmatch_calls" "is_robust_match" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "omnitest" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" 
".External2" "plot.new" "plot.default" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"isTRUE" "rmatch_calls" "is_robust_match" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "omnitest" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" 
".External2" "plot.new" "plot.default" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"do.call" "find.package" "index.search" "utils::help" ".rs.getHelp" ".rs.getHelpArgument" "<Anonymous>" 
"readRDS" "index.search" "utils::help" ".rs.getHelp" ".rs.getHelpArgument" "<Anonymous>" 
"ifelse" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpArgument" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list.default" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "htmlify" "paste0" "writeLines" "writeLinesUTF8" "of0" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "<Anonymous>" 
"eval" "match.arg" "capture.output" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"grepl" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"charToRaw" "toupper" "paste0" "FUN" "vapply" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"unique.default" "unique" "simplify2array" "sapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"list2env" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"grep" "isBlankRd" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" 
"plot.xy" "plot.default" "plot" "plot2" "plot.data.frame" "plot" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"c" ".rs.appendCompletions" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"%in%" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"unique" "simplify2array" "sapply" "RdTags" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"of1" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"options" "%in%" "getOption" "file" "readLines" "paste" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"toupper" "paste0" "FUN" "vapply" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".deparseOpts" "deparse" "textConnection" "capture.output" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lazyLoadDBfetch" "get" "inherits" ".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"fsub" "vhtmlify" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"grepl" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFunction" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"sub" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"%in%" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.scalar" ".rs.makeCompletions" ".rs.emptyCompletions" "<Anonymous>" 
"formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"grepl" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"data" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grepl" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"paste" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"plot.xy" "plot.default" "plot" "plot2" "plot.data.frame" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"plot.xy" "plot.default" "plot" "plot2" "plot.data.frame" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" 
"plot.xy" "plot.default" "plot" "plot2" "plot.data.frame" "plot" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"paste" "getS3method" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "rmatch_calls" "is_robust_match" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "omnitest" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" 
"plot.xy" "plot.default" "plot" "plot2" "plot.data.frame" "plot" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"class<-" ".rs.scalar" ".rs.scalar" ".rs.makeCompletions" ".rs.emptyCompletions" "<Anonymous>" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" 
".External2" "plot.new" "plot.default" "plot" "plot2" "plot.data.frame" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"axis" "Axis.default" "Axis" "localAxis" "plot.default" "plot" "plot2" "plot.data.frame" "plot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".Call" ".rs.getNAMESPACEImportedSymbols" ".rs.getCompletionsNAMESPACE" "Reduce" "<Anonymous>" 
"readRDS" "lazyLoadDBexec" "lazyLoad" "data" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
".rs.setEncodingUnknownToUTF8" "<Anonymous>" 
"readRDS" "lazyLoadDBexec" "lazyLoad" "data" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" ".rs.getCompletionsHelp" "<Anonymous>" 
"length" "apply" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "FUN" "lapply" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"readRDS" "FUN" "lapply" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"grepl" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "FUN" "lapply" "find.package" "index.search" "help" "eval" "eval" "?" 
"readRDS" "index.search" "help" "eval" "eval" "?" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readLines" "paste" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".Call" ".rs.listIndexedPackages" "basename" ".rs.getCompletionsPackages" "Reduce" "<Anonymous>" 
"tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"attr" "get_link" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"base::print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatchList" "tryCatch" "FUN" "lapply" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"unique" "simplify2array" "sapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"match.fun" "vapply" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".External2" "plot.new" "bxp" "do.call" "boxplot.default" "boxplot" "boxplot.formula" "boxplot" 
"is.na" "boxplot.stats" "boxplot.default" "boxplot" "boxplot.formula" "boxplot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
".External2" "plot.new" "bxp" "do.call" "boxplot.default" "boxplot" "boxplot.formula" "boxplot" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"close.connection" "close" "saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list" "lapply" "sapply" "RdTags" "get_link" "writeLink" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"title" "plot.histogram" "plot" "hist.default" "hist" 
".External2" "plot.new" "plot.histogram" "plot" "hist.default" "hist" "eval" "eval" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "safeEval" "mergeLists" "resume.default" "resume" "<Anonymous>" 
"isNamespace" "asNamespace" "get" ":::" "getKnownS3generics" "getS3method" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "rmatch_calls" "is_robust_match" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "omnitest" "FUN" "lapply" "sapply" "any_of_exprs" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"readline" "waitUser.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"waitUser.mult_question" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "readline" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"tryCatchList" "tryCatch" "<Anonymous>" "readline" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
".Call" "curl::curl_fetch_memory" "request_fetch.write_memory" "request_fetch" "request_perform" "httr::POST" "coursera_on_demand" "eval" "eval" "testMe" "FUN" "lapply" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "f" "%N%" "praise" "testResponse.default" "<Anonymous>" "resume.default" "resume" "<Anonymous>" 
"saveRDS" "withCallingHandlers" "suppressWarnings" "withCallingHandlers" "suppressMessages" "saveProgress.default" "saveProgress" "resume.default" "resume" "<Anonymous>" 
"menu" "select.list" "courseMenu.default" "courseMenu" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"menu" "select.list" "courseMenu.default" "courseMenu" "mainMenu.default" "mainMenu" "resume.default" "resume" "<Anonymous>" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"stopifnot" "srcfilecopy" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"structure" "object.size" "<Anonymous>" 
".External2" "plot.new" "plot.histogram" "plot" "hist.default" "hist" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"get" "getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"list2env" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"docall" "withOneRestart" "withRestarts" ".signalSimpleWarning" ".rs.normalizePath" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"structure" "object.size" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"%in%" "<Anonymous>" 
"path.package" "find.package" "data" "withCallingHandlers" "suppressWarnings" ".rs.getCompletionsData" "<Anonymous>" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".Call" ".rs.isRScriptInPackageBuildTarget" "<Anonymous>" 
"match.fun" "vapply" "urlify" "paste0" "writeLines" "writeLinesUTF8" "of0" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.makeCompletions" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"regexpr" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"grepl" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"match.arg" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" "<Anonymous>" 
"%in%" "[[.data.frame" "[[" "$.data.frame" "$" "eval" "eval" "inherits" ".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "suppressWarnings" ".rs.getCompletionsDollar" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"sink" "tryCatch" ".Rd_get_text" ".Rd_get_title" "gsub" ".Rd_format_title" "strwrap" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"capture.output" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"regexpr" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "FUN" "lapply" "find.package" "index.search" "help" "eval" "eval" "?" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"%in%" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"rep.int" ".rs.formCompletionVector" ".rs.makeCompletions" ".rs.emptyCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"sub" ".rs.doStripSurrounding" ".rs.stripSurrounding" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"structure" ".POSIXct" "Sys.time" "srcfilecopy" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" ".rs.getCompletionsPackages" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBaseNamespace" "getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"find.package" "index.search" "help" "eval" "eval" "?" 
"any" "findClose" "transformMethod" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"ifelse" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"RdTags" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"readRDS" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"%in%" "structure" "grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"sys.function" "formals" "match.arg" "sink" "capture.output" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"cat" "str.data.frame" "str" 
".getNamespaceInfo" "getExportedValue" "::" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" 
"nchar" "maybe_truncate" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" 
"nchar" "maybe_truncate" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" 
"nchar" "maybe_truncate" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"fsub" "htmlify" "writeLines" "writeLinesUTF8" "of1" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"%in%" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"[" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"as.name" "eval" "FUN" "lapply" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"scan" "read.table" "read.csv" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" ".read_description" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"readRDS" "index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".Call" ".rs.finishExpression" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"%in%" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsSingleBracket" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
".rs.makeCompletions" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"match.arg" "format.default" "format" "format.data.frame" "as.matrix" "print.data.frame" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"sub" ".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.blackListEvaluationDataTable" ".rs.blackListEvaluation" ".rs.getCompletionsDollar" "<Anonymous>" 
"eval" "inherits" ".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "suppressWarnings" ".rs.getCompletionsDollar" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.blackListEvaluationDataTable" ".rs.blackListEvaluation" ".rs.getCompletionsSingleBracket" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"unlist" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"<Anonymous>" "lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"%in%" "structure" "grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"FUN" "vapply" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"toupper" "paste0" "FUN" "vapply" "urlify" "paste0" "writeLines" "writeLinesUTF8" "of0" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"isBaseNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"deparse" "mode" "capture.output" ".rs.getSignature" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" ".rs.getCompletionsSingleBracket" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"find.package" "system.file" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"sub" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"close.connection" "close" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"structure" "grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"existsInFrame" "<Anonymous>" "lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grepl" "ifelse" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"basename" ".rs.getCompletionsPackages" "Reduce" "<Anonymous>" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list.default" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeContent" "writeLR" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".Call" ".rs.scoreMatches" ".rs.sortCompletions" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"as.list.default" "as.list" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"grepl" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"format.default" "format" "format.data.frame" "as.matrix" "print.data.frame" "<Anonymous>" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" ".rs.getCompletionsPackages" "Reduce" "<Anonymous>" 
"grepl" ".rs.makeCompletions" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.blackListEvaluationDataTable" ".rs.blackListEvaluation" ".rs.getCompletionsSingleBracket" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.character" "structure" "grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"gsub" ".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.blackListEvaluationDataTable" ".rs.blackListEvaluation" ".rs.getCompletionsSingleBracket" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"readRDS" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"[" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"order" "[.data.frame" "[" "head" 
"[[.data.frame" "[[" "$.data.frame" "$" "rev" "order" "[.data.frame" "[" "head" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"sub" ".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"==" ".rs.setEncodingUnknownToUTF8" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"%in%" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"paste" "get_link" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"grepl" ".make_numeric_version" "R_system_version" "package_version" "getRversion" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
".External" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpWhileBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getEnvironmentOfFunction" ".rs.getUntracedFunction" ".rs.getFunctionSourceRefs" "eval" "eval" "withVisible" "evalVis" "capture.output" "paste" "<Anonymous>" 
"body" ".makeTracedFunction" ".initTraceable" "initialize" "initialize" "new" "methods::.TraceWithMethods" "eval" "eval" "eval.parent" "trace" "withCallingHandlers" "suppressMessages" "<Anonymous>" 
"length" "cb$putcode" "cmpSubassignDispatch" "h" "trySetterInline" "cmpSetterCall" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.tracedSourceRefs" ".rs.tracedSourceRefs" "tryCatchList" "tryCatch" "<Anonymous>" 
"mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"eval" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" "best" 
"best" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "best" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "best" 
"best" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "best" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "best" 
"strtrim" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"substring" ".rs.startsWith" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" ".rs.getCompletionsSingleBracket" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"paste" "sub" ".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.blackListEvaluationDataTable" ".rs.blackListEvaluation" ".rs.getCompletionsSingleBracket" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"as.character" "row.names.data.frame" "row.names" "dimnames.data.frame" "dimnames" "dimnames" "rownames" ".rs.getCompletionsSingleBracket" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"readRDS" "data" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"regexpr" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"parent.frame" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.normalizePath" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" ".rs.getCompletionsHelp" "<Anonymous>" 
"grepl" "ifelse" "urlify" "paste0" "writeLines" "writeLinesUTF8" "of0" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"sub" ".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"getInlineInfo" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsFile" "<Anonymous>" 
"h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsFile" "<Anonymous>" 
"lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"%in%" "[[.data.frame" "[[" "[.data.frame" "[" "best" 
"close" "source" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
".External" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
".rs.getFunctionSteps" ".rs.getSteps" "<Anonymous>" 
"getOption" "prettyNum" "format.default" "format" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"structure" "object.size" "<Anonymous>" "best" 
"best" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "best" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" "best" 
"htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" "best" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "best" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "best" 
"best" 
"length" "length" "<Anonymous>" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"readRDS" "index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"unlist" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" "<Anonymous>" 
"grepl" ".rs.makeCompletions" ".rs.emptyCompletions" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.makeCompletions" ".rs.emptyCompletions" ".rs.getCompletionsLibraryContext" "Reduce" "<Anonymous>" 
"get" "getExportedValue" "::" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grepl" "ifelse" "urlify" "paste0" "writeLines" "writeLinesUTF8" "of0" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"%in%" "<Anonymous>" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grepl" "ifelse" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"gzfile" "readRDS" "FUN" "lapply" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"constantFold" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"unlist" "matrix" "Ops.data.frame" "==" "[.data.frame" "[" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"sub" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"sub" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"unique" "setdiff" ".rs.getCompletionsPackages" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatch" "base::try" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"getNamespace" "asNamespace" "getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"get" "getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"toupper" "paste0" "FUN" "vapply" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"environment" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"<Anonymous>" 
"as.list.default" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBaseNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"paste" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"file.exists" "index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"close" "readRDS" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"getNamespace" "asNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"paste0" "writeLines" "writeLinesUTF8" "of0" "leavePara" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lapply" "sapply" "RdTags" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" "head" 
"findCenvVar" "findFunDef" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"[.data.frame" "[" "FUN" "lapply" "sapply" "rankall" "head" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"[<-.data.frame" "[<-" "FUN" "lapply" "sapply" "rankall" 
"options" "%in%" "getOption" "file" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"sys.call" "%in%" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "rankall" 
"exists" "findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"[.data.frame" "[" "FUN" "lapply" "sapply" "rankall" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"as.list.default" "as.list" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"[.data.frame" "[" "[.data.frame" "[" "FUN" "lapply" "sapply" "rankall" 
"%in%" "deparse" "as.data.frame.character" "as.data.frame" "<Anonymous>" "do.call" "as.data.frame.list" "as.data.frame" "data.frame" "eval" "eval" "as.data.frame.table" "as.data.frame" "rankall" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"order" "[.data.frame" "[" "FUN" "lapply" "sapply" "rankall" "head" 
"structure" "as.data.frame.vector" "as.data.frame.character" "as.data.frame" "<Anonymous>" "do.call" "as.data.frame.list" "as.data.frame" "data.frame" "eval" "eval" "as.data.frame.table" "as.data.frame" "rankall" "head" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"source" 
"getInlineInfo" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpBuiltinArgs" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"sys.call" "%in%" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "rankall" "head" 
"[.data.frame" "[" "FUN" "lapply" "sapply" "rankall" "head" 
"<Anonymous>" "do.call" "as.data.frame.list" "as.data.frame" "data.frame" "eval" "eval" "as.data.frame.table" "as.data.frame" "rankall" "head" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"cb$setcurexpr" "cmp" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpBuiltinArgs" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "FUN" "lapply" "sapply" "rankall" "head" 
"FUN" "lapply" "sapply" "rankall" "head" 
".rs.tracedSourceRefs" ".rs.tracedSourceRefs" ".rs.tracedSourceRefs" ".rs.tracedSourceRefs" ".rs.tracedSourceRefs" "tryCatchList" "tryCatch" "<Anonymous>" "FUN" "lapply" "sapply" "rankall" "head" 
"match.fun" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" "browser" "eval" "eval" "eval.parent" ".doTrace" "FUN" "lapply" "sapply" "rankall" "head" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" "browser" "eval" "eval" "eval.parent" ".doTrace" "FUN" "lapply" "sapply" "rankall" "head" 
"exists" "findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" "browser" "eval" "eval" "eval.parent" ".doTrace" "FUN" "lapply" "sapply" "rankall" "head" 
"as.name" "cb$putconst" "cmpTag" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.environmentCallFrameName" "<Anonymous>" "browser" "eval" "eval" "eval.parent" ".doTrace" "FUN" "lapply" "sapply" "rankall" "head" 
"nchar" "maybe_truncate" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "browser" "eval" "eval" "eval.parent" ".doTrace" "FUN" "lapply" "sapply" "rankall" "head" 
"attr" "<Anonymous>" "browser" "eval" "eval" "eval.parent" ".doTrace" "FUN" "lapply" "sapply" "rankall" "head" 
"FUN" "lapply" "sapply" "rankall" "head" 
"str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "sapply" "rankall" "head" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "sapply" "rankall" "head" 
"eval" "eval" "FUN" "lapply" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "browser" "eval" "eval" "eval.parent" ".doTrace" "rankall" "head" 
"<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "browser" "eval" "eval" "eval.parent" ".doTrace" "rankall" "head" 
"strtrim" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "rankall" "head" 
"parent.frame" "eval" "FUN" "lapply" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "rankall" "head" 
"rankall" "head" 
"FUN" "lapply" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"formals" "eval" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"source" 
"parent.env" "findCenvVar" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" "head" 
"[[.data.frame" "[[" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" "head" 
"findCenvVar" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" "head" 
".External" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" "head" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" "head" 
"print.default" "print" "print.data.frame" "print" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" "head" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" "head" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"order" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"make.names" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"structure" "[.data.frame" "[" "FUN" "lapply" "rankall" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" 
"match.call" "as.vector" "setdiff" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"attributes" "encodeString" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"paste" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"print.default" "print" "print.data.frame" "print" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"%in%" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lapply" "sapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"print.data.frame" "print" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"grep" "is.ddsym" "cmpSym" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" 
"Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" 
"maybe_truncate" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"ngettext" "paste" "n.of." "n.of" "cat" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "browser" "eval" "eval" "eval.parent" ".doTrace" "FUN" "lapply" "rankall" 
"FUN" "lapply" "rankall" 
"<Anonymous>" 
"structure" "object.size" "<Anonymous>" 
"unique.default" "unique" "setdiff" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"putconst" "cb$putcode" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"putconst" "cb$putcode" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"putconst" "cb$putcode" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"putconst" "cb$putcode" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"putconst" "cb$putcode" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"putconst" "cb$putcode" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" 
"sys.call" "%in%" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "rankall" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"nchar" "maybe_truncate" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "browser" "eval" "eval" "eval.parent" ".doTrace" "FUN" "lapply" "rankall" 
"FUN" "lapply" "rankall" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "FUN" "lapply" "rankall" 
"FUN" "lapply" "rankall" 
"str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"$" "findCenvVar" "findFunDef" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"make.names" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"[.data.frame" "[" "FUN" "lapply" "rankall" 
"[.data.frame" "[" "FUN" "lapply" "rankall" 
"eval" "FUN" "lapply" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"format.default" "format" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"%in%" "[[.data.frame" "[[" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"sys.call" "%in%" "[[.data.frame" "[[" "format" "format.data.frame" "as.matrix" "print.data.frame" "print" 
"unlist" ".rs.getCompletionsHelp" "<Anonymous>" 
"readRDS" "FUN" "lapply" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"readRDS" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"readRDS" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"grepl" "ifelse" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"$" "FUN" "lapply" "find.package" "index.search" "help" "eval" "eval" "?" 
"readRDS" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"grepl" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"c" "f" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"sapply" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"paste0" "writeLines" "writeLinesUTF8" "of0" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"anyDuplicated" "data.row.names" "FUN" "lapply" 
".deparseOpts" "deparse" "mode" "%in%" "deparse" "paste" "as.data.frame.AsIs" "as.data.frame" "<Anonymous>" "do.call" "as.data.frame.list" "format.data.frame" "as.matrix" "print.data.frame" "print" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" ".rs.getCompletionsHelp" "<Anonymous>" 
"sub" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"order" "make.names" "FUN" "lapply" "do.call" 
"print.default" "print" "print.data.frame" "print" 
"length" "FUN" "vapply" "format.data.frame" "as.matrix" "print.data.frame" "print" 
"paste" "sub" ".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"exists" "findCenvVar" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"get" "Ops.data.frame" "!=" "[.data.frame" "[" "rankall" "head" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" "head" 
"[" "order" "[.data.frame" "[" "FUN" "lapply" "rankall" "head" 
"cb$putcode" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpBuiltinArgs" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "head" 
"names" "names" "structure" "[.data.frame" "[" "FUN" "lapply" "rankall" "head" 
"matrix" "Ops.data.frame" "==" "[.data.frame" "[" "FUN" "lapply" "rankall" "head" 
"scan" "read.table" "read.csv" "rankall" "tail" 
"scan" "read.table" "read.csv" "rankall" "tail" 
"scan" "read.table" "read.csv" "rankall" "tail" 
"scan" "read.table" "read.csv" "rankall" "tail" 
"scan" "read.table" "read.csv" "rankall" "tail" 
"scan" "read.table" "read.csv" "rankall" "tail" 
"scan" "read.table" "read.csv" "rankall" "tail" 
"scan" "read.table" "read.csv" "rankall" "tail" 
"scan" "read.table" "read.csv" "rankall